Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    TRUE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> mientras_instr
Rule 8     instruccion -> hacerMientras_instr
Rule 9     instruccion -> para_instr
Rule 10    instruccion -> if_instr
Rule 11    instruccion -> if_else_instr
Rule 12    imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
Rule 13    definicion_instr -> NUMERO ID
Rule 14    definicion_instr -> BOOL ID
Rule 15    expresion_logica -> ID
Rule 16    definicion_instr -> BOOL ID IGUAL expresion_logica
Rule 17    asignacion_instr -> ID IGUAL expresion_logica
Rule 18    definicion_instr -> NUMERO ID IGUAL expresion_numerica
Rule 19    asignacion_instr -> ID IGUAL expresion_numerica
Rule 20    mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
Rule 21    hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
Rule 22    para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
Rule 23    if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
Rule 24    if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI
Rule 25    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 26    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 27    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 28    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 29    expresion_numerica -> MENOS expresion_numerica
Rule 30    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 31    expresion_numerica -> ENTERO
Rule 32    expresion_numerica -> DECIMAL
Rule 33    expresion_numerica -> ID
Rule 34    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 35    expresion_cadena -> CADENA
Rule 36    expresion_cadena -> expresion_numerica
Rule 37    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 38    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 39    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 40    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

BOOL                 : 14 16
CADENA               : 35
CONCAT               : 34
DBPT                 : 20 21 22 23 24 24
DECIMAL              : 32
DIVIDIDO             : 28
ELSE                 : 24
ENTERO               : 31
FALSE                : 
FINMIENTRAS          : 20
FINPARA              : 22
FINSI                : 23 24
HACER                : 21
ID                   : 13 14 15 16 17 18 19 33
IF                   : 23 24
IGUAL                : 16 17 18 19
IGUALQUE             : 39
IMPRIMIR             : 12
LLAVDER              : 12 20 21 22 23 24
LLAVIZQ              : 12 20 21 22 23 24
MAS                  : 25
MAYQUE               : 37
MENOS                : 26 29
MENQUE               : 38
MIENTRAS             : 20 21
NIGUALQUE            : 40
NUMERO               : 13 18
PARA                 : 22
PARDER               : 30
PARIZQ               : 30
POR                  : 27
PTCOMA               : 22 22
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6 22
definicion_instr     : 5 22
expresion_cadena     : 12 34 34
expresion_logica     : 16 17 20 21 22 23 24
expresion_numerica   : 18 19 25 25 26 26 27 27 28 28 29 30 36 37 37 38 38 39 39 40 40
hacerMientras_instr  : 8
if_else_instr        : 11
if_instr             : 10
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 20 21 22 23 24 24
mientras_instr       : 7
para_instr           : 9

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    $end            reduce using rule 1 (init -> instrucciones .)
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    IMPRIMIR        reduce using rule 3 (instrucciones -> instruccion .)
    NUMERO          reduce using rule 3 (instrucciones -> instruccion .)
    BOOL            reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    HACER           reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    FINMIENTRAS     reduce using rule 3 (instrucciones -> instruccion .)
    FINSI           reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    FINPARA         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    IMPRIMIR        reduce using rule 4 (instruccion -> imprimir_instr .)
    NUMERO          reduce using rule 4 (instruccion -> imprimir_instr .)
    BOOL            reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 4 (instruccion -> imprimir_instr .)
    HACER           reduce using rule 4 (instruccion -> imprimir_instr .)
    PARA            reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    FINMIENTRAS     reduce using rule 4 (instruccion -> imprimir_instr .)
    FINSI           reduce using rule 4 (instruccion -> imprimir_instr .)
    ELSE            reduce using rule 4 (instruccion -> imprimir_instr .)
    FINPARA         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    IMPRIMIR        reduce using rule 5 (instruccion -> definicion_instr .)
    NUMERO          reduce using rule 5 (instruccion -> definicion_instr .)
    BOOL            reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 5 (instruccion -> definicion_instr .)
    HACER           reduce using rule 5 (instruccion -> definicion_instr .)
    PARA            reduce using rule 5 (instruccion -> definicion_instr .)
    IF              reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    FINMIENTRAS     reduce using rule 5 (instruccion -> definicion_instr .)
    FINSI           reduce using rule 5 (instruccion -> definicion_instr .)
    ELSE            reduce using rule 5 (instruccion -> definicion_instr .)
    FINPARA         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    IMPRIMIR        reduce using rule 6 (instruccion -> asignacion_instr .)
    NUMERO          reduce using rule 6 (instruccion -> asignacion_instr .)
    BOOL            reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> asignacion_instr .)
    HACER           reduce using rule 6 (instruccion -> asignacion_instr .)
    PARA            reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    FINMIENTRAS     reduce using rule 6 (instruccion -> asignacion_instr .)
    FINSI           reduce using rule 6 (instruccion -> asignacion_instr .)
    ELSE            reduce using rule 6 (instruccion -> asignacion_instr .)
    FINPARA         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> mientras_instr .

    IMPRIMIR        reduce using rule 7 (instruccion -> mientras_instr .)
    NUMERO          reduce using rule 7 (instruccion -> mientras_instr .)
    BOOL            reduce using rule 7 (instruccion -> mientras_instr .)
    ID              reduce using rule 7 (instruccion -> mientras_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> mientras_instr .)
    HACER           reduce using rule 7 (instruccion -> mientras_instr .)
    PARA            reduce using rule 7 (instruccion -> mientras_instr .)
    IF              reduce using rule 7 (instruccion -> mientras_instr .)
    $end            reduce using rule 7 (instruccion -> mientras_instr .)
    FINMIENTRAS     reduce using rule 7 (instruccion -> mientras_instr .)
    FINSI           reduce using rule 7 (instruccion -> mientras_instr .)
    ELSE            reduce using rule 7 (instruccion -> mientras_instr .)
    FINPARA         reduce using rule 7 (instruccion -> mientras_instr .)


state 8

    (8) instruccion -> hacerMientras_instr .

    IMPRIMIR        reduce using rule 8 (instruccion -> hacerMientras_instr .)
    NUMERO          reduce using rule 8 (instruccion -> hacerMientras_instr .)
    BOOL            reduce using rule 8 (instruccion -> hacerMientras_instr .)
    ID              reduce using rule 8 (instruccion -> hacerMientras_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> hacerMientras_instr .)
    HACER           reduce using rule 8 (instruccion -> hacerMientras_instr .)
    PARA            reduce using rule 8 (instruccion -> hacerMientras_instr .)
    IF              reduce using rule 8 (instruccion -> hacerMientras_instr .)
    $end            reduce using rule 8 (instruccion -> hacerMientras_instr .)
    FINMIENTRAS     reduce using rule 8 (instruccion -> hacerMientras_instr .)
    FINSI           reduce using rule 8 (instruccion -> hacerMientras_instr .)
    ELSE            reduce using rule 8 (instruccion -> hacerMientras_instr .)
    FINPARA         reduce using rule 8 (instruccion -> hacerMientras_instr .)


state 9

    (9) instruccion -> para_instr .

    IMPRIMIR        reduce using rule 9 (instruccion -> para_instr .)
    NUMERO          reduce using rule 9 (instruccion -> para_instr .)
    BOOL            reduce using rule 9 (instruccion -> para_instr .)
    ID              reduce using rule 9 (instruccion -> para_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> para_instr .)
    HACER           reduce using rule 9 (instruccion -> para_instr .)
    PARA            reduce using rule 9 (instruccion -> para_instr .)
    IF              reduce using rule 9 (instruccion -> para_instr .)
    $end            reduce using rule 9 (instruccion -> para_instr .)
    FINMIENTRAS     reduce using rule 9 (instruccion -> para_instr .)
    FINSI           reduce using rule 9 (instruccion -> para_instr .)
    ELSE            reduce using rule 9 (instruccion -> para_instr .)
    FINPARA         reduce using rule 9 (instruccion -> para_instr .)


state 10

    (10) instruccion -> if_instr .

    IMPRIMIR        reduce using rule 10 (instruccion -> if_instr .)
    NUMERO          reduce using rule 10 (instruccion -> if_instr .)
    BOOL            reduce using rule 10 (instruccion -> if_instr .)
    ID              reduce using rule 10 (instruccion -> if_instr .)
    MIENTRAS        reduce using rule 10 (instruccion -> if_instr .)
    HACER           reduce using rule 10 (instruccion -> if_instr .)
    PARA            reduce using rule 10 (instruccion -> if_instr .)
    IF              reduce using rule 10 (instruccion -> if_instr .)
    $end            reduce using rule 10 (instruccion -> if_instr .)
    FINMIENTRAS     reduce using rule 10 (instruccion -> if_instr .)
    FINSI           reduce using rule 10 (instruccion -> if_instr .)
    ELSE            reduce using rule 10 (instruccion -> if_instr .)
    FINPARA         reduce using rule 10 (instruccion -> if_instr .)


state 11

    (11) instruccion -> if_else_instr .

    IMPRIMIR        reduce using rule 11 (instruccion -> if_else_instr .)
    NUMERO          reduce using rule 11 (instruccion -> if_else_instr .)
    BOOL            reduce using rule 11 (instruccion -> if_else_instr .)
    ID              reduce using rule 11 (instruccion -> if_else_instr .)
    MIENTRAS        reduce using rule 11 (instruccion -> if_else_instr .)
    HACER           reduce using rule 11 (instruccion -> if_else_instr .)
    PARA            reduce using rule 11 (instruccion -> if_else_instr .)
    IF              reduce using rule 11 (instruccion -> if_else_instr .)
    $end            reduce using rule 11 (instruccion -> if_else_instr .)
    FINMIENTRAS     reduce using rule 11 (instruccion -> if_else_instr .)
    FINSI           reduce using rule 11 (instruccion -> if_else_instr .)
    ELSE            reduce using rule 11 (instruccion -> if_else_instr .)
    FINPARA         reduce using rule 11 (instruccion -> if_else_instr .)


state 12

    (12) imprimir_instr -> IMPRIMIR . LLAVIZQ expresion_cadena LLAVDER

    LLAVIZQ         shift and go to state 21


state 13

    (13) definicion_instr -> NUMERO . ID
    (18) definicion_instr -> NUMERO . ID IGUAL expresion_numerica

    ID              shift and go to state 22


state 14

    (17) asignacion_instr -> ID . IGUAL expresion_logica
    (19) asignacion_instr -> ID . IGUAL expresion_numerica

    IGUAL           shift and go to state 23


state 15

    (14) definicion_instr -> BOOL . ID
    (16) definicion_instr -> BOOL . ID IGUAL expresion_logica

    ID              shift and go to state 24


state 16

    (20) mientras_instr -> MIENTRAS . LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS

    LLAVIZQ         shift and go to state 25


state 17

    (21) hacerMientras_instr -> HACER . DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER

    DBPT            shift and go to state 26


state 18

    (22) para_instr -> PARA . LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA

    LLAVIZQ         shift and go to state 27


state 19

    (23) if_instr -> IF . LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> IF . LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    LLAVIZQ         shift and go to state 28


state 20

    (2) instrucciones -> instrucciones instruccion .

    IMPRIMIR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BOOL            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    HACER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FINMIENTRAS     reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FINSI           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FINPARA         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 21

    (12) imprimir_instr -> IMPRIMIR LLAVIZQ . expresion_cadena LLAVDER
    (34) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (35) expresion_cadena -> . CADENA
    (36) expresion_cadena -> . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    CADENA          shift and go to state 30
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_cadena               shift and go to state 29
    expresion_numerica             shift and go to state 31

state 22

    (13) definicion_instr -> NUMERO ID .
    (18) definicion_instr -> NUMERO ID . IGUAL expresion_numerica

    IMPRIMIR        reduce using rule 13 (definicion_instr -> NUMERO ID .)
    NUMERO          reduce using rule 13 (definicion_instr -> NUMERO ID .)
    BOOL            reduce using rule 13 (definicion_instr -> NUMERO ID .)
    ID              reduce using rule 13 (definicion_instr -> NUMERO ID .)
    MIENTRAS        reduce using rule 13 (definicion_instr -> NUMERO ID .)
    HACER           reduce using rule 13 (definicion_instr -> NUMERO ID .)
    PARA            reduce using rule 13 (definicion_instr -> NUMERO ID .)
    IF              reduce using rule 13 (definicion_instr -> NUMERO ID .)
    $end            reduce using rule 13 (definicion_instr -> NUMERO ID .)
    PTCOMA          reduce using rule 13 (definicion_instr -> NUMERO ID .)
    FINMIENTRAS     reduce using rule 13 (definicion_instr -> NUMERO ID .)
    FINSI           reduce using rule 13 (definicion_instr -> NUMERO ID .)
    ELSE            reduce using rule 13 (definicion_instr -> NUMERO ID .)
    FINPARA         reduce using rule 13 (definicion_instr -> NUMERO ID .)
    IGUAL           shift and go to state 37


state 23

    (17) asignacion_instr -> ID IGUAL . expresion_logica
    (19) asignacion_instr -> ID IGUAL . expresion_numerica
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 39
    expresion_numerica             shift and go to state 40

state 24

    (14) definicion_instr -> BOOL ID .
    (16) definicion_instr -> BOOL ID . IGUAL expresion_logica

    IMPRIMIR        reduce using rule 14 (definicion_instr -> BOOL ID .)
    NUMERO          reduce using rule 14 (definicion_instr -> BOOL ID .)
    BOOL            reduce using rule 14 (definicion_instr -> BOOL ID .)
    ID              reduce using rule 14 (definicion_instr -> BOOL ID .)
    MIENTRAS        reduce using rule 14 (definicion_instr -> BOOL ID .)
    HACER           reduce using rule 14 (definicion_instr -> BOOL ID .)
    PARA            reduce using rule 14 (definicion_instr -> BOOL ID .)
    IF              reduce using rule 14 (definicion_instr -> BOOL ID .)
    $end            reduce using rule 14 (definicion_instr -> BOOL ID .)
    PTCOMA          reduce using rule 14 (definicion_instr -> BOOL ID .)
    FINMIENTRAS     reduce using rule 14 (definicion_instr -> BOOL ID .)
    FINSI           reduce using rule 14 (definicion_instr -> BOOL ID .)
    ELSE            reduce using rule 14 (definicion_instr -> BOOL ID .)
    FINPARA         reduce using rule 14 (definicion_instr -> BOOL ID .)
    IGUAL           shift and go to state 41


state 25

    (20) mientras_instr -> MIENTRAS LLAVIZQ . expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 42
    expresion_numerica             shift and go to state 43

state 26

    (21) hacerMientras_instr -> HACER DBPT . instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instrucciones                  shift and go to state 44
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 27

    (22) para_instr -> PARA LLAVIZQ . definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica

    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15

    definicion_instr               shift and go to state 45

state 28

    (23) if_instr -> IF LLAVIZQ . expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> IF LLAVIZQ . expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 46
    expresion_numerica             shift and go to state 43

state 29

    (12) imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena . LLAVDER
    (34) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    LLAVDER         shift and go to state 47
    CONCAT          shift and go to state 48


state 30

    (35) expresion_cadena -> CADENA .

    LLAVDER         reduce using rule 35 (expresion_cadena -> CADENA .)
    CONCAT          reduce using rule 35 (expresion_cadena -> CADENA .)


state 31

    (36) expresion_cadena -> expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    LLAVDER         reduce using rule 36 (expresion_cadena -> expresion_numerica .)
    CONCAT          reduce using rule 36 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 32

    (29) expresion_numerica -> MENOS . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 53

state 33

    (30) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 54

state 34

    (31) expresion_numerica -> ENTERO .

    MAS             reduce using rule 31 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 31 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 31 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 31 (expresion_numerica -> ENTERO .)
    LLAVDER         reduce using rule 31 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 31 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 31 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 31 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 31 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 31 (expresion_numerica -> ENTERO .)
    IMPRIMIR        reduce using rule 31 (expresion_numerica -> ENTERO .)
    NUMERO          reduce using rule 31 (expresion_numerica -> ENTERO .)
    BOOL            reduce using rule 31 (expresion_numerica -> ENTERO .)
    ID              reduce using rule 31 (expresion_numerica -> ENTERO .)
    MIENTRAS        reduce using rule 31 (expresion_numerica -> ENTERO .)
    HACER           reduce using rule 31 (expresion_numerica -> ENTERO .)
    PARA            reduce using rule 31 (expresion_numerica -> ENTERO .)
    IF              reduce using rule 31 (expresion_numerica -> ENTERO .)
    $end            reduce using rule 31 (expresion_numerica -> ENTERO .)
    FINMIENTRAS     reduce using rule 31 (expresion_numerica -> ENTERO .)
    FINSI           reduce using rule 31 (expresion_numerica -> ENTERO .)
    ELSE            reduce using rule 31 (expresion_numerica -> ENTERO .)
    FINPARA         reduce using rule 31 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 31 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 31 (expresion_numerica -> ENTERO .)


state 35

    (32) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 32 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 32 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 32 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 32 (expresion_numerica -> DECIMAL .)
    LLAVDER         reduce using rule 32 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 32 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 32 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 32 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 32 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 32 (expresion_numerica -> DECIMAL .)
    IMPRIMIR        reduce using rule 32 (expresion_numerica -> DECIMAL .)
    NUMERO          reduce using rule 32 (expresion_numerica -> DECIMAL .)
    BOOL            reduce using rule 32 (expresion_numerica -> DECIMAL .)
    ID              reduce using rule 32 (expresion_numerica -> DECIMAL .)
    MIENTRAS        reduce using rule 32 (expresion_numerica -> DECIMAL .)
    HACER           reduce using rule 32 (expresion_numerica -> DECIMAL .)
    PARA            reduce using rule 32 (expresion_numerica -> DECIMAL .)
    IF              reduce using rule 32 (expresion_numerica -> DECIMAL .)
    $end            reduce using rule 32 (expresion_numerica -> DECIMAL .)
    FINMIENTRAS     reduce using rule 32 (expresion_numerica -> DECIMAL .)
    FINSI           reduce using rule 32 (expresion_numerica -> DECIMAL .)
    ELSE            reduce using rule 32 (expresion_numerica -> DECIMAL .)
    FINPARA         reduce using rule 32 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 32 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 32 (expresion_numerica -> DECIMAL .)


state 36

    (33) expresion_numerica -> ID .

    MAS             reduce using rule 33 (expresion_numerica -> ID .)
    MENOS           reduce using rule 33 (expresion_numerica -> ID .)
    POR             reduce using rule 33 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 33 (expresion_numerica -> ID .)
    LLAVDER         reduce using rule 33 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 33 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 33 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 33 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 33 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 33 (expresion_numerica -> ID .)
    IMPRIMIR        reduce using rule 33 (expresion_numerica -> ID .)
    NUMERO          reduce using rule 33 (expresion_numerica -> ID .)
    BOOL            reduce using rule 33 (expresion_numerica -> ID .)
    ID              reduce using rule 33 (expresion_numerica -> ID .)
    MIENTRAS        reduce using rule 33 (expresion_numerica -> ID .)
    HACER           reduce using rule 33 (expresion_numerica -> ID .)
    PARA            reduce using rule 33 (expresion_numerica -> ID .)
    IF              reduce using rule 33 (expresion_numerica -> ID .)
    $end            reduce using rule 33 (expresion_numerica -> ID .)
    FINMIENTRAS     reduce using rule 33 (expresion_numerica -> ID .)
    FINSI           reduce using rule 33 (expresion_numerica -> ID .)
    ELSE            reduce using rule 33 (expresion_numerica -> ID .)
    FINPARA         reduce using rule 33 (expresion_numerica -> ID .)
    PARDER          reduce using rule 33 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 33 (expresion_numerica -> ID .)


state 37

    (18) definicion_instr -> NUMERO ID IGUAL . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 55

state 38

    (15) expresion_logica -> ID .
    (33) expresion_numerica -> ID .

  ! reduce/reduce conflict for IMPRIMIR resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for NUMERO resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for HACER resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for PARA resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for FINMIENTRAS resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for FINSI resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 15 (expresion_logica -> ID .)
  ! reduce/reduce conflict for FINPARA resolved using rule 15 (expresion_logica -> ID .)
    IMPRIMIR        reduce using rule 15 (expresion_logica -> ID .)
    NUMERO          reduce using rule 15 (expresion_logica -> ID .)
    BOOL            reduce using rule 15 (expresion_logica -> ID .)
    ID              reduce using rule 15 (expresion_logica -> ID .)
    MIENTRAS        reduce using rule 15 (expresion_logica -> ID .)
    HACER           reduce using rule 15 (expresion_logica -> ID .)
    PARA            reduce using rule 15 (expresion_logica -> ID .)
    IF              reduce using rule 15 (expresion_logica -> ID .)
    $end            reduce using rule 15 (expresion_logica -> ID .)
    FINMIENTRAS     reduce using rule 15 (expresion_logica -> ID .)
    FINSI           reduce using rule 15 (expresion_logica -> ID .)
    ELSE            reduce using rule 15 (expresion_logica -> ID .)
    LLAVDER         reduce using rule 15 (expresion_logica -> ID .)
    FINPARA         reduce using rule 15 (expresion_logica -> ID .)
    PTCOMA          reduce using rule 15 (expresion_logica -> ID .)
    MAYQUE          reduce using rule 33 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 33 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 33 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 33 (expresion_numerica -> ID .)
    MAS             reduce using rule 33 (expresion_numerica -> ID .)
    MENOS           reduce using rule 33 (expresion_numerica -> ID .)
    POR             reduce using rule 33 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 33 (expresion_numerica -> ID .)

  ! IMPRIMIR        [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! NUMERO          [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! BOOL            [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! ID              [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! MIENTRAS        [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! HACER           [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! PARA            [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! IF              [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! $end            [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! FINMIENTRAS     [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! FINSI           [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! ELSE            [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! LLAVDER         [ reduce using rule 33 (expresion_numerica -> ID .) ]
  ! FINPARA         [ reduce using rule 33 (expresion_numerica -> ID .) ]


state 39

    (17) asignacion_instr -> ID IGUAL expresion_logica .

    IMPRIMIR        reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    NUMERO          reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    BOOL            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    ID              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    MIENTRAS        reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    HACER           reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    PARA            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    IF              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    $end            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    FINMIENTRAS     reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    FINSI           reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    ELSE            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    LLAVDER         reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)
    FINPARA         reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_logica .)


state 40

    (19) asignacion_instr -> ID IGUAL expresion_numerica .
    (37) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (38) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (39) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (40) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    NUMERO          reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    BOOL            reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    ID              reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    MIENTRAS        reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    HACER           reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    PARA            reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    IF              reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    $end            reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    FINMIENTRAS     reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    FINSI           reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    ELSE            reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    LLAVDER         reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    FINPARA         reduce using rule 19 (asignacion_instr -> ID IGUAL expresion_numerica .)
    MAYQUE          shift and go to state 56
    MENQUE          shift and go to state 57
    IGUALQUE        shift and go to state 58
    NIGUALQUE       shift and go to state 59
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 41

    (16) definicion_instr -> BOOL ID IGUAL . expresion_logica
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 60
    expresion_numerica             shift and go to state 43

state 42

    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica . LLAVDER DBPT instrucciones FINMIENTRAS

    LLAVDER         shift and go to state 61


state 43

    (37) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (38) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (39) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (40) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 56
    MENQUE          shift and go to state 57
    IGUALQUE        shift and go to state 58
    NIGUALQUE       shift and go to state 59
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 44

    (21) hacerMientras_instr -> HACER DBPT instrucciones . MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    MIENTRAS        shift and go to state 62
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 45

    (22) para_instr -> PARA LLAVIZQ definicion_instr . PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA

    PTCOMA          shift and go to state 63


state 46

    (23) if_instr -> IF LLAVIZQ expresion_logica . LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> IF LLAVIZQ expresion_logica . LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    LLAVDER         shift and go to state 64


state 47

    (12) imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .

    IMPRIMIR        reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    NUMERO          reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    BOOL            reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    ID              reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    MIENTRAS        reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    HACER           reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    PARA            reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    IF              reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    $end            reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    FINMIENTRAS     reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    FINSI           reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    ELSE            reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)
    FINPARA         reduce using rule 12 (imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER .)


state 48

    (34) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (34) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (35) expresion_cadena -> . CADENA
    (36) expresion_cadena -> . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    CADENA          shift and go to state 30
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_cadena               shift and go to state 65
    expresion_numerica             shift and go to state 31

state 49

    (25) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 66

state 50

    (26) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 67

state 51

    (27) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 68

state 52

    (28) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 69

state 53

    (29) expresion_numerica -> MENOS expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    LLAVDER         reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    IMPRIMIR        reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    NUMERO          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    BOOL            reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    ID              reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    HACER           reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    PARA            reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    IF              reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    $end            reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    FINMIENTRAS     reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    FINSI           reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    ELSE            reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    FINPARA         reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 29 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 49 ]
  ! MENOS           [ shift and go to state 50 ]
  ! POR             [ shift and go to state 51 ]
  ! DIVIDIDO        [ shift and go to state 52 ]


state 54

    (30) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 70
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 55

    (18) definicion_instr -> NUMERO ID IGUAL expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    NUMERO          reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    BOOL            reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    ID              reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    MIENTRAS        reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    HACER           reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    PARA            reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    IF              reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    $end            reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    PTCOMA          reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    FINMIENTRAS     reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    FINSI           reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    ELSE            reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    FINPARA         reduce using rule 18 (definicion_instr -> NUMERO ID IGUAL expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 56

    (37) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 71

state 57

    (38) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 72

state 58

    (39) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 73

state 59

    (40) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 36

    expresion_numerica             shift and go to state 74

state 60

    (16) definicion_instr -> BOOL ID IGUAL expresion_logica .

    IMPRIMIR        reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    NUMERO          reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    BOOL            reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    ID              reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    MIENTRAS        reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    HACER           reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    PARA            reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    IF              reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    $end            reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    PTCOMA          reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    FINMIENTRAS     reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    FINSI           reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    ELSE            reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)
    FINPARA         reduce using rule 16 (definicion_instr -> BOOL ID IGUAL expresion_logica .)


state 61

    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER . DBPT instrucciones FINMIENTRAS

    DBPT            shift and go to state 75


state 62

    (21) hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS . LLAVIZQ expresion_logica LLAVDER
    (20) mientras_instr -> MIENTRAS . LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS

    LLAVIZQ         shift and go to state 76


state 63

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA . expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 77
    expresion_numerica             shift and go to state 43

state 64

    (23) if_instr -> IF LLAVIZQ expresion_logica LLAVDER . DBPT instrucciones FINSI
    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER . DBPT instrucciones ELSE DBPT instrucciones FINSI

    DBPT            shift and go to state 78


state 65

    (34) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (34) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    LLAVDER         reduce using rule 34 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    CONCAT          reduce using rule 34 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 48 ]


state 66

    (25) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    LLAVDER         reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IMPRIMIR        reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NUMERO          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    BOOL            reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ID              reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MIENTRAS        reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    HACER           reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARA            reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IF              reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    $end            reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FINMIENTRAS     reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FINSI           reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ELSE            reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FINPARA         reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52

  ! POR             [ reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 49 ]
  ! MENOS           [ shift and go to state 50 ]


state 67

    (26) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    LLAVDER         reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IMPRIMIR        reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NUMERO          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    BOOL            reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ID              reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    HACER           reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARA            reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IF              reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    $end            reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FINMIENTRAS     reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FINSI           reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ELSE            reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FINPARA         reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52

  ! POR             [ reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 49 ]
  ! MENOS           [ shift and go to state 50 ]


state 68

    (27) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    LLAVDER         reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IMPRIMIR        reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NUMERO          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    BOOL            reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ID              reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MIENTRAS        reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    HACER           reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARA            reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IF              reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    $end            reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FINMIENTRAS     reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FINSI           reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ELSE            reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FINPARA         reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 27 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 49 ]
  ! MENOS           [ shift and go to state 50 ]
  ! POR             [ shift and go to state 51 ]
  ! DIVIDIDO        [ shift and go to state 52 ]


state 69

    (28) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    LLAVDER         reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IMPRIMIR        reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NUMERO          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    BOOL            reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ID              reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MIENTRAS        reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    HACER           reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARA            reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IF              reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    $end            reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FINMIENTRAS     reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FINSI           reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ELSE            reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FINPARA         reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 28 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 49 ]
  ! MENOS           [ shift and go to state 50 ]
  ! POR             [ shift and go to state 51 ]
  ! DIVIDIDO        [ shift and go to state 52 ]


state 70

    (30) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    LLAVDER         reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IMPRIMIR        reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NUMERO          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    BOOL            reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    ID              reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MIENTRAS        reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    HACER           reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARA            reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IF              reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    $end            reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    FINMIENTRAS     reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    FINSI           reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    ELSE            reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    FINPARA         reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 30 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 71

    (37) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    NUMERO          reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    BOOL            reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    ID              reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MIENTRAS        reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    HACER           reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    PARA            reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    IF              reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    $end            reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    FINMIENTRAS     reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    FINSI           reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    ELSE            reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    LLAVDER         reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    FINPARA         reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    PTCOMA          reduce using rule 37 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 72

    (38) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    NUMERO          reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    BOOL            reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    ID              reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MIENTRAS        reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    HACER           reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    PARA            reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    IF              reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    $end            reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    FINMIENTRAS     reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    FINSI           reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    ELSE            reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    LLAVDER         reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    FINPARA         reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    PTCOMA          reduce using rule 38 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 73

    (39) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    NUMERO          reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    BOOL            reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    ID              reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MIENTRAS        reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    HACER           reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    PARA            reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    IF              reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    $end            reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    FINMIENTRAS     reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    FINSI           reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    ELSE            reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    LLAVDER         reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    FINPARA         reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    PTCOMA          reduce using rule 39 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 74

    (40) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (25) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (26) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (27) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (28) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    IMPRIMIR        reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    NUMERO          reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    BOOL            reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    ID              reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MIENTRAS        reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    HACER           reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    PARA            reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    IF              reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    $end            reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    FINMIENTRAS     reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    FINSI           reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    ELSE            reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    LLAVDER         reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    FINPARA         reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    PTCOMA          reduce using rule 40 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    POR             shift and go to state 51
    DIVIDIDO        shift and go to state 52


state 75

    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT . instrucciones FINMIENTRAS
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instrucciones                  shift and go to state 79
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 76

    (21) hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ . expresion_logica LLAVDER
    (20) mientras_instr -> MIENTRAS LLAVIZQ . expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (15) expresion_logica -> . ID
    (37) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (38) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (39) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (40) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (25) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (26) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (27) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (28) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (29) expresion_numerica -> . MENOS expresion_numerica
    (30) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (31) expresion_numerica -> . ENTERO
    (32) expresion_numerica -> . DECIMAL
    (33) expresion_numerica -> . ID

    ID              shift and go to state 38
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35

    expresion_logica               shift and go to state 80
    expresion_numerica             shift and go to state 43

state 77

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica . PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA

    PTCOMA          shift and go to state 81


state 78

    (23) if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT . instrucciones FINSI
    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT . instrucciones ELSE DBPT instrucciones FINSI
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instrucciones                  shift and go to state 82
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 79

    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones . FINMIENTRAS
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    FINMIENTRAS     shift and go to state 83
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 80

    (21) hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica . LLAVDER
    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica . LLAVDER DBPT instrucciones FINMIENTRAS

    LLAVDER         shift and go to state 84


state 81

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA . asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica

    ID              shift and go to state 14

    asignacion_instr               shift and go to state 85

state 82

    (23) if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones . FINSI
    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones . ELSE DBPT instrucciones FINSI
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    FINSI           shift and go to state 86
    ELSE            shift and go to state 87
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 83

    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .

    IMPRIMIR        reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    NUMERO          reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    BOOL            reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    ID              reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    MIENTRAS        reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    HACER           reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    PARA            reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    IF              reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    $end            reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    FINMIENTRAS     reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    FINSI           reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    ELSE            reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)
    FINPARA         reduce using rule 20 (mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS .)


state 84

    (21) hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .
    (20) mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER . DBPT instrucciones FINMIENTRAS

    IMPRIMIR        reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    NUMERO          reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    BOOL            reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    ID              reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    MIENTRAS        reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    HACER           reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    PARA            reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    IF              reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    $end            reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    FINMIENTRAS     reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    FINSI           reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    ELSE            reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    FINPARA         reduce using rule 21 (hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER .)
    DBPT            shift and go to state 75


state 85

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr . LLAVDER DBPT instrucciones FINPARA

    LLAVDER         shift and go to state 88


state 86

    (23) if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .

    IMPRIMIR        reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    NUMERO          reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    BOOL            reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    ID              reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    MIENTRAS        reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    HACER           reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    PARA            reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    IF              reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    $end            reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    FINMIENTRAS     reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    FINSI           reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    ELSE            reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)
    FINPARA         reduce using rule 23 (if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI .)


state 87

    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE . DBPT instrucciones FINSI

    DBPT            shift and go to state 89


state 88

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER . DBPT instrucciones FINPARA

    DBPT            shift and go to state 90


state 89

    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT . instrucciones FINSI
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instrucciones                  shift and go to state 91
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 90

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT . instrucciones FINPARA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    instrucciones                  shift and go to state 92
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 91

    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones . FINSI
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    FINSI           shift and go to state 93
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 92

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones . FINPARA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . hacerMientras_instr
    (9) instruccion -> . para_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . if_else_instr
    (12) imprimir_instr -> . IMPRIMIR LLAVIZQ expresion_cadena LLAVDER
    (13) definicion_instr -> . NUMERO ID
    (14) definicion_instr -> . BOOL ID
    (16) definicion_instr -> . BOOL ID IGUAL expresion_logica
    (18) definicion_instr -> . NUMERO ID IGUAL expresion_numerica
    (17) asignacion_instr -> . ID IGUAL expresion_logica
    (19) asignacion_instr -> . ID IGUAL expresion_numerica
    (20) mientras_instr -> . MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS
    (21) hacerMientras_instr -> . HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER
    (22) para_instr -> . PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA
    (23) if_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI
    (24) if_else_instr -> . IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI

    FINPARA         shift and go to state 94
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    BOOL            shift and go to state 15
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 16
    HACER           shift and go to state 17
    PARA            shift and go to state 18
    IF              shift and go to state 19

    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    instruccion                    shift and go to state 20
    imprimir_instr                 shift and go to state 4
    mientras_instr                 shift and go to state 7
    hacerMientras_instr            shift and go to state 8
    para_instr                     shift and go to state 9
    if_instr                       shift and go to state 10
    if_else_instr                  shift and go to state 11

state 93

    (24) if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .

    IMPRIMIR        reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    NUMERO          reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    BOOL            reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    ID              reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    MIENTRAS        reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    HACER           reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    PARA            reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    IF              reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    $end            reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    FINMIENTRAS     reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    FINSI           reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    ELSE            reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)
    FINPARA         reduce using rule 24 (if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI .)


state 94

    (22) para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .

    IMPRIMIR        reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    NUMERO          reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    BOOL            reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    ID              reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    MIENTRAS        reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    HACER           reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    PARA            reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    IF              reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    $end            reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    FINMIENTRAS     reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    FINSI           reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    ELSE            reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)
    FINPARA         reduce using rule 22 (para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 38 resolved using rule (expresion_logica -> ID)
WARNING: rejected rule (expresion_numerica -> ID) in state 38
